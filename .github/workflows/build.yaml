name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  HUSKY: 0

jobs:
  install:
    name: Install package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      - name: Check package-lock.json
        run: npm run package:check

      - name: Install package
        run: npm ci

  commitlint:
    if: github.event_name == 'pull_request'
    name: CommitLint
    needs:
      - install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      # https://commitlint.js.org/guides/ci-setup.html#github-actions
      - name: Validate PR commits with commitlint
        run: npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose --color

  lint:
    name: Lint code
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      - name: Run lint
        run: npm run lint -- -- --max-processes 1

  chromatic:
    name: Chromatic
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
        env:
          CHROMATIC_BRANCH: ${{ github.event.pull_request.head.ref || github.ref_name }}
          CHROMATIC_SHA: ${{ github.event.pull_request.head.sha || github.ref }}
          CHROMATIC_SLUG: ${{ github.repository }}

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      - name: Build package
        run: npm run build --workspace=@pplancq/shelter-ui-react --workspace=@pplancq/shelter-ui-css

      - name: Run Chromatic
        uses: chromaui/action@4d8ebd13658d795114f8051e25c28d66f14886c6 # v13.1.2
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          buildScriptName: 'build'
          workingDir: 'apps/storybook'
          onlyChanged: true
          zip: true
          skip: '@(renovate/**|dependabot/**)'

  test:
    name: Test
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      - name: Run test
        run: npm run test

      - name: Upload sonar reports
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: sonar-reports
          path: |
            coverage/lcov.info
            sonar-report.xml

  sonarcloud:
    name: SonarCloud Scan
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Download test reports
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: sonar-reports

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@2500896589ef8f7247069a56136f8dc177c27ccf # v5.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build
    needs:
      - install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      - name: Run build
        run: npm run build
